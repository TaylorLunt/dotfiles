#!/usr/bin/env perl
# Copyright (C) 2014 Tony Crisci <tony@dubstepdish.com>
# Copyright (C) 2015 Thiago Perrotta <perrotta dot thiago at poli dot ufrj dot br>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Requires playerctl binary to be in your path (except cmus)
# See: https://github.com/acrisci/playerctl

# Set instance=NAME in the i3blocks configuration to specify a music player
# (playerctl will attempt to connect to org.mpris.MediaPlayer2.[NAME] on your
# DBus session).
# 
#------------------------------------------------------------------------

# Modified for my uses by taylor-gl

#------------------------------------------------------------------------

use Time::HiRes qw(usleep);
use Env qw(BLOCK_INSTANCE);

use constant DELAY => 50; # Delay in ms to let network-based players (spotify) reflect new data.
use constant SPOTIFY_STR => 'spotify';

my @metadata = ();
my $player_arg = "--player=vlc";

sub buttons {
    if ($ENV{'BLOCK_BUTTON'} == 1) {
        # system("playerctl $player_arg previous");
        system("playerctl $player_arg position 5-");
        # usleep(DELAY * 1000) if $BLOCK_INSTANCE eq SPOTIFY_STR;
    } elsif ($ENV{'BLOCK_BUTTON'} == 2) {
        system("playerctl $player_arg play-pause");
    } elsif ($ENV{'BLOCK_BUTTON'} == 3) {
        # system("playerctl $player_arg next");
        system("playerctl $player_arg position 5+");
        # usleep(DELAY * 1000) if $BLOCK_INSTANCE eq SPOTIFY_STR;
    } elsif ($ENV{'BLOCK_BUTTON'} == 4) {
        system("playerctl $player_arg volume 0.05+");
    } elsif ($ENV{'BLOCK_BUTTON'} == 5) {
        system("playerctl $player_arg volume 0.05-");
    }
}

sub playerctl {
    # A custom version of the playerctl I made to use filenames
    # rather than file titles/artists.
    # -- taylor gl
    buttons('playerctl');
    my $artist = qx(playerctl $player_arg metadata artist);
    chomp $artist;

    my $title_raw = qx(playerctl $player_arg metadata title | cut -c1-40);
    chomp $title_raw;
    my $title = $title_raw . '...';

    my $filename = qx(playerctl $player_arg metadata --format '{{xesam:url}}' | xargs basename);
    chomp $filename;
    exit(0) if $? || $filename eq '(null)';

    if ($title) {
        push(@metadata, $artist) if $artist;
        push(@metadata, $title) if $title;
    } elsif ($filename) {
        push(@metadata, $filename)
    }

    my $duration = qx(playerctl $player_arg metadata --format '{{duration(position)}}|{{duration(mpris:length)}}');
    exit(0) if $? || $duration eq '(null)';

    push(@metadata, $duration) if $duration;

    print(join(" - ", @metadata)) if @metadata;
}

playerctl;
print("\n");
